<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        ">
        
    <context:property-placeholder location="classpath:dbconfig.properties"/>
       
    <!-- 开启注解扫描功能-->  
    <context:component-scan base-package="com.project"/>
    

    <!-- 1.数据源的配置，只能通过xml -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="maxActive" value="30"/>
		<property name="initialSize" value="10"/>
		<property name="maxWait" value="60000"/>
		<property name="minIdle" value="5"/>
	</bean>
	
	<!-- 2.配置sqlSessionFactory单例的对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<!-- 设置Mybatis核心配置文件的位置 -->
    	<property name="configLocation" value="classpath:SqlMapConfig.xml"/>   	
    	<!-- 设置数据源属性 -->
    	<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	<!-- 配置接口的包 -->
    	<property name="basePackage" value="com.project.mapper"/>
	</bean>
	
	<!-- 声明式事务控制 -->
    <!-- 1.事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 2.配置消息 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
    	<tx:attributes>
    		<!-- 传播行为 -->
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="select*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="query*" propagation="SUPPORTS" read-only="true" />
    	</tx:attributes>
    </tx:advice>
    
    <!-- 3.配置aop织入消息 -->
    <aop:config>
    	<aop:pointcut expression="execution(* com.project.service..*.*(..))" id="txpointcut"/>   	
    	<aop:advisor advice-ref="txAdvice" pointcut-ref="txpointcut"/>
    </aop:config>

      
    
</beans>